

//WITHOUT the [ ]



v[save file version]
[object type]
[
...
all properties. one for each line
...
]
[object type]
[
...
all properties. one for each line
...
]
[object type]
[
...
all properties. one for each line
...
]

...


[object type]
[
...
all properties. one for each line
...
]
exit




it's very simple to program the encoding and decoding. the save "encoding" is made so it's easy to program.
when saving, for each object, it proceed like it's making a serie of writeline but in fact it's adding lines to a list<string>. it begins by writing its "object type" which is belt or machine.
then, it writes on the next lines each property's values, one property by line. when the save is read, we know in which order we programmed ~"the writing" of the properties.
after we wrote every objects, the file ends by "exit".

in the exemple above, "object type" is either "belt" or "machine" (or "exit")


if it's a belt :
...
belt
le FOType mais .tostring()
posx
posy
...


if it's a machine :
...
machine
le FOType du recipe mais en .tostring()
NeedCoal
posx
posy
...




END OF ENGLISH



c'est simple à programmer pour saver et lire la save. la sauvegarde est concu pour faciliter la lecture par le programme.
pour sauvegarder, pour chaque objet, il procède comme dans une série de writeline, mais en ajoutant des ligne à une liste. il commence par écrire son "object type" qui est soit belt ou machine.
ensuite il écrit sur les ligne suivante les valeur des propriété, une propriété par ligne. lors de la lecture de la save, nous savons dans quel ordre nous avons programmé l'écriture des propriété.
après que tout les objet aient été écrit, il fini la sauvegarde par une ligne "exit".

dans l'exemple d'en haut, "object type" est soit "belt" ou "machine" (ou "exit")


si c'est une belt :
...
belt
le FOType mais .tostring()
posx
posy
...


pour une machine :
...
machine
le FOType du recipe mais en .tostring()
NeedCoal
posx
posy
...





